"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadByPDFMake = exports.passwordStrength = exports.sendEmail = exports.propUpdate = exports.zeroPad = void 0;
/**
 *
 * @param num Number to be padded (ex.22)
 * @param digit Number of total end string (default is 4)
 * @returns String of added zero pad (ex. num=21,digit=4 returns "0021")
 */
function zeroPad(num, digit) {
    if (digit === void 0) { digit = 4; }
    return num.toString().padStart(digit, "0");
}
exports.zeroPad = zeroPad;
/**
 *
 * @param originalProp Object of props to be changed
 * @param newProp new prop to be added to original prop
 */
// Dependencies
var nodemailer = __importStar(require("nodemailer"));
var sendEmail = function (options, SMTPSetting) { return __awaiter(void 0, void 0, void 0, function () {
    var transporter, message, info;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                transporter = nodemailer.createTransport({
                    host: SMTPSetting.host,
                    port: SMTPSetting.port,
                    name: SMTPSetting.name,
                    auth: SMTPSetting.auth
                });
                message = {
                    from: "".concat('PIP Support', " <").concat('noreply@trillium-tech.com', ">"),
                    to: options.email,
                    subject: options.subject,
                    text: options.message,
                    html: options.html
                };
                return [4 /*yield*/, transporter.sendMail(message)];
            case 1:
                info = _a.sent();
                console.log('Message sent: %s', info.messageId);
                return [2 /*return*/];
        }
    });
}); };
exports.sendEmail = sendEmail;
var downloadByPDFMake = function (downloadContent, fileName) { return __awaiter(void 0, void 0, void 0, function () {
    var pdfMake, pdfFonts, inputType, content, _loop_1, i, footerFunction, docDefinition;
    return __generator(this, function (_a) {
        pdfMake = require("pdfmake/build/pdfmake.js");
        if (pdfMake.vfs == undefined) {
            pdfFonts = require("./customVfs.js");
            pdfMake.vfs = pdfFonts.pdfMake.vfs;
        }
        inputType = ['rowInputOneColumn', 'rowInputTwoColumns', 'table', 'text', 'image', 'topPart'];
        content = [];
        _loop_1 = function (i) {
            if (downloadContent[i].type === 'rowInputOneColumn') {
                downloadContent[i].data.forEach(function (el) {
                    content.push({
                        columns: [
                            { text: "".concat(el.split(':')[0]), fontSize: 11, bold: true },
                            { text: ": ".concat(el.split(':')[1]), fontSize: 11, },
                            {}
                        ], margin: [0, 0, 0, 5]
                    });
                });
            }
            if (downloadContent[i].type === 'table') {
                var widths_1 = [];
                var header_1 = [];
                var dataTable_1 = [];
                downloadContent[i].data.header.forEach(function (el) {
                    widths_1.push("".concat(100 / downloadContent[i].data.header.length, "%"));
                    header_1.push({ text: "".concat(el), style: 'tableHeader', alignment: 'center' });
                });
                downloadContent[i].data.dataTable.forEach(function (el, index) {
                    var row = [];
                    downloadContent[i].data.valueTable.forEach(function (e, i) {
                        var key = [];
                        e.split('.').forEach(function (doc) {
                            key.push(["".concat(doc)]);
                        });
                        var data = el;
                        key.forEach(function (doc) {
                            data = data[doc];
                        });
                        row.push({ text: "".concat(data), style: 'normal', alignment: 'center' });
                    });
                    dataTable_1.push(row);
                });
                content.push({
                    style: 'tableCommon',
                    table: {
                        widths: downloadContent[i].data.widths ? downloadContent[i].data.widths : widths_1,
                        body: __spreadArray([
                            header_1
                        ], dataTable_1, true)
                    },
                    layout: downloadContent[i].data.noBorder ? 'noBorders' : ''
                });
            }
            if (downloadContent[i].type === 'image') {
                content.push(__assign(__assign({}, downloadContent[i].data), { margin: [0, 0, 0, 10] }));
            }
            if (downloadContent[i].type === 'topPart') {
                content.push({
                    columns: [
                        {
                            text: [
                                { text: "".concat(downloadContent[i].data.greeting), fontSize: 13 },
                                {
                                    text: "".concat(downloadContent[i].data.name ? downloadContent[i].data.name : ''),
                                    fontSize: 12,
                                    bold: true,
                                },
                            ],
                            alignment: "left",
                            margin: [0, 0, 0, 10],
                        },
                        {
                            text: "".concat(downloadContent[i].data.additionalInfo.split(':')[0]),
                            fontSize: 13,
                            alignment: "right",
                            margin: [0, 0, 0, 10],
                        },
                    ],
                }, {
                    columns: [
                        {},
                        {
                            text: "".concat(downloadContent[i].data.additionalInfo.split(':')[1]),
                            fontSize: 11,
                            alignment: "right",
                            bold: true,
                            margin: [0, 0, 0, 10],
                        },
                    ],
                });
            }
            if (downloadContent[i].type === 'text') {
                content.push({
                    text: "".concat(downloadContent[i].data),
                    fontSize: 11,
                    margin: downloadContent[i].margin,
                });
            }
        };
        for (i = 0; i < downloadContent.length; i++) {
            _loop_1(i);
        }
        footerFunction = function (currentPage, pageCount) {
            return {
                text: "Page ".concat(currentPage, " of ").concat(pageCount),
                alignment: "center",
                fontSize: 10,
                margin: [0, 5, 0, 0],
            };
        };
        docDefinition = {
            footer: footerFunction,
            content: content,
            styles: {
                tableCommon: {
                    margin: [0, 10, 0, 10],
                    fontSize: 11,
                },
                tableHeader: {
                    bold: true,
                    fontSize: 11,
                    bod: true,
                    alignment: "center",
                },
            },
            defaultStyle: {
                font: "Calibri",
            },
        };
        pdfMake.fonts = {
            Calibri: {
                normal: "calibri.ttf",
                bold: "calibrib.ttf",
                italics: "calibrii.ttf",
                bolditalics: "calibril.ttf",
            },
        };
        pdfMake.createPdf(docDefinition).download("".concat(fileName));
        return [2 /*return*/];
    });
}); };
exports.downloadByPDFMake = downloadByPDFMake;
function propUpdate(originalProp, newProp) {
    var key;
    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
        key = _a[_i];
        if (!originalProp.hasOwnProperty(key) || typeof newProp[key] !== 'object')
            originalProp[key] = newProp[key];
        else
            propUpdate(originalProp[key], newProp[key]);
    }
    return originalProp;
}
exports.propUpdate = propUpdate;
function passwordStrength(password) {
    var passwordLength = password.length;
    var poolSize = 0;
    var characters = [];
    if (/[a-z]/.test(password)) {
        poolSize += 26;
        characters.push('Lower Case');
    }
    if (/[A-Z]/.test(password)) {
        poolSize += 26;
        characters.push('Upper Case');
    }
    if (/[0-9]/.test(password)) {
        poolSize += 10;
        characters.push('Number');
    }
    if (/[ `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/.test(password)) {
        poolSize += 33;
        characters.push('Symbol');
    }
    var entropy = passwordLength * Math.log2(poolSize);
    var strength;
    if (entropy > 39 && entropy <= 70) {
        strength = "Weak";
    }
    if (entropy > 70 && entropy <= 101) {
        strength = "Medium";
    }
    if (entropy > 101 && entropy <= 132) {
        strength = "Strong";
    }
    return {
        strength: strength,
        characters: characters,
        entropy: entropy,
    };
}
exports.passwordStrength = passwordStrength;
